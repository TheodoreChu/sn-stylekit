.red {
  color: $danger-color;
}

.tinted {
  color: $tint-color;
}

.selectable {
  user-select: text !important;
  -ms-user-select: text !important;
  -moz-user-select: text !important;
  -webkit-user-select: text !important;
}

.sk-h1, .sk-h2, .sk-h3, .sk-h4, .sk-h5 {
  margin: 0;
  padding: 0;
  font-weight: normal;
}

.sk-h1 {
  font-weight: 500;
  font-size: 1.3rem;
  line-height: 1.9rem;
}

.sk-h2 {
  font-size: 1.2rem;
  line-height: 1.8rem;
}

.sk-h3 {
  font-size: 1.1rem;
  line-height: 1.7rem;
}

.sk-h4 {
  font-size: 0.95rem;
  line-height: 1.4rem;
}

.sk-h5 {
  font-size: 0.85rem;
}

.sk-bold {
  font-weight: bold;
}

.sk-font-small {
  font-size: var(--sn-stylekit-font-size-small);
}

.sk-font-normal {
  font-size: var(--sn-stylekit-font-size-normal);
}

.sk-font-large {
  font-size: var(--sn-stylekit-font-size-large);
}

a.sk-a {
  cursor: pointer;

  &.disabled {
    color: $section-border-color;
  }

  &.boxed {
    border-radius: 3px;
    color: white;
    padding: 0.4rem;

    &:hover {
      text-decoration: none;
    }

    &.info {
      background-color: $tint-color;
    }

    &.warning {
      background-color: $warning-color;
    }

    &.danger {
      background-color: $danger-color;
    }

    &.success {
      background-color: $success-color;
    }

  }
}

.wrap {
  word-wrap: break-word;
}

* {

    &.info {
      color: var(--sn-stylekit-info-color);
    }

    &.warning {
      color: var(--sn-stylekit-warning-color);
    }

    &.danger {
      color: var(--sn-stylekit-danger-color);
    }

    &.success {
      color: var(--sn-stylekit-success-color);
    }

    &.info-i {
      color: var(--sn-stylekit-info-color) !important;
    }

    &.warning-i {
      color: var(--sn-stylekit-warning-color) !important;
    }

    &.danger-i {
      color: var(--sn-stylekit-danger-color) !important;
    }

    &.success-i {
      color: var(--sn-stylekit-success-color) !important;
    }

    &.clear {
      background-color: transparent;
      border: none;
    }
}

.center-text {
  text-align: center !important;
  justify-content: center !important;
}

p.sk-p {
  margin: 0.5rem 0;
}

input.sk-input {
  box-sizing: border-box;
  padding: 0.75rem 0.8rem;
  margin: 0.30rem 0;
  border-radius: 3px;
  border: 1px solid lighten($section-border-color, 1.5%);
  font-size: 1.1rem;
  width: 100%;
  outline: 0;
  resize: none;

  &.clear {
    background-color: transparent;
    border: none;
  }

  &.info {
    border-color: $tint-color;
    background-color: transparent;
    color: $tint-color;

    &::-webkit-input-placeholder {
      color: rgba($tint-color, 0.5);
    }
  }
}

.sk-label {
  font-weight: bold;

  &.no-bold {
    font-weight: normal;
  }
}

label.sk-label {
  margin: 0.7rem 0;
  display: block;
}

label.sk-label input[type='checkbox'], input[type='radio'] {
  width: auto;
  margin-right: 0.45rem; /* Space after checkbox */
  vertical-align: middle;
}

.sk-horizontal-group {
  > * {
    display: inline-block;
    vertical-align: middle;

    &:not(:first-child) {
      margin-left: 0.9rem;
    }
  }
}

.sk-border-bottom {
  border-bottom: 1px solid $section-border-color;
}

.sk-input-group {
  @extend .sk-horizontal-group;
}

.sk-checkbox-group {
  padding-top: 0.5rem;
  padding-bottom: 0.3rem;
}

::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
    color: $placeholder-color;
}

:-ms-input-placeholder { /* Internet Explorer 10-11 */
  color: $placeholder-color;
}

::-ms-input-placeholder { /* Microsoft Edge */
  color: $placeholder-color;
}

.sk-button-group {
  &.stretch {
    display: flex;
    width: 100%;
    .sk-button {
      display: block;
      flex-grow: 1;
      text-align: center;
    }
  }
  .sk-button {
    display: inline-block;
    vertical-align: middle;
    // margin-bottom: 5px;
    &:not(:last-child) {
      margin-right: 5px;
      &.featured {
        margin-right: 8px;
      }
    }
  }
}


$button-border-radius: 3px;

.sk-segmented-buttons {
  display: flex;
  flex-direction: row;

  .sk-button {
    border-radius: 0;
    white-space: nowrap;

    &:not(:last-child) {
      border-right: none;
    }

    &:first-child {
      border-top-left-radius: $button-border-radius;
      border-bottom-left-radius: $button-border-radius;
      border-right: none;
    }

    &:last-child {
      border-top-right-radius: $button-border-radius;
      border-bottom-right-radius: $button-border-radius;
    }
    margin: 0;
  }
}

.sk-box-group {
  .sk-box {
    display: inline-block;
    // margin-bottom: 5px;
    &:not(:last-child) {
      margin-right: 5px;
    }
  }
}

.sk-a.button {
  text-decoration: none;
}

.sk-button {
  display: table;
  border-radius: $button-border-radius;
  padding: 0.5rem 0.7rem;
  font-size: 0.9rem;
  cursor: pointer;
  text-align: center;
  border: 1px solid;

  .sk-label {
    font-weight: bold;
    display: block;
    text-align: center;
  }

  &.big {
    font-size: 1.1rem;
    padding: 0.7rem 2.5rem;
  }
}

.sk-box {
  @extend .sk-button;
  padding: 2.5rem 1.5rem;
}

@mixin ui-rect($color, $contrast-color, $hoverable) {
  border-color: $color;
  color: $contrast-color;

  position: relative;

  // Make background separately layer so we can set its color using CSS vars
  // (as opposed to CSS vars in SASS functions, which is impossible).

  &:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $color;
    z-index: -1;
    opacity: 1.0;
  }

  @if $hoverable == true {
    &:hover {
      &:before {
        filter: brightness(130%);
      }
    }
  }

  &.featured {
    border: none;
    padding: 0.75rem 1.25rem;
    font-size: 1.1rem;

    &:before {
      opacity: 1.0;
    }

    &:hover {
      &:before {
        filter: brightness(110%);
      }
    }
  }
}

.sk-button.default, .sk-box.default, .sk-circle.default {
  @include ui-rect(var(--sn-stylekit-default-color), var(--sn-stylekit-default-contrast-color), true);
}

.sk-button.info, .sk-box.info, .sk-circle.info {
  @include ui-rect(var(--sn-stylekit-info-color), var(--sn-stylekit-info-contrast-color), true);
}

.sk-button.warning, .sk-box.warning, .sk-circle.warning {
  @include ui-rect(var(--sn-stylekit-warning-color), var(--sn-stylekit-warning-contrast-color), true);
}

.sk-button.danger, .sk-box.danger, .sk-circle.danger {
  @include ui-rect(var(--sn-stylekit-danger-color), var(--sn-stylekit-danger-contrast-color), true);
}

.sk-button.success, .sk-box.success, .sk-circle.success {
  @include ui-rect(var(--sn-stylekit-success-color),var(--sn-stylekit-success-contrast-color), true);
}

.sk-notification.default {
@include ui-rect(var(--sn-stylekit-default-color), var(--sn-stylekit-default-contrast-color), false);
}

.sk-notification.info {
  @include ui-rect(var(--sn-stylekit-info-color), var(--sn-stylekit-info-contrast-color), false);
}

.sk-notification.warning {
  @include ui-rect(var(--sn-stylekit-warning-color), var(--sn-stylekit-warning-contrast-color), false);
}

.sk-notification.danger {
  @include ui-rect(var(--sn-stylekit-danger-color), var(--sn-stylekit-danger-contrast-color), false);
}

.sk-notification.success {
  @include ui-rect(var(--sn-stylekit-success-color),var(--sn-stylekit-success-contrast-color), false);
}

.sk-notification {
  border: 1px solid;
  padding: 1.1rem 1rem;
  margin: 1.4rem 0;
  text-align: left;
  border-radius: 0.2rem;
  cursor: default;

  &.one-line {
    padding: 0rem 0.4rem;
  }

  &.stretch {
    width: 100%;
  }

  &.dashed {
    border-style: dashed;
  }

  .text {
    line-height: 1.5rem;
    font-size: 1.05rem;
    text-align: left;
    font-weight: normal;
  }
}

.sk-circle {
  @extend .sk-button;

  border-color: var(--sn-stylekit-contrast-foreground-color);
  background-color: var(--sn-stylekit-contrast-background-color);

  padding: 0;
  border-radius: 50%;

  &.small {
    width: 11px;
    height: 11px;
  }
}

.sk-spinner {
  border: 1px solid #515263;
  border-radius: 50%;
  animation: rotate 0.8s infinite linear;
  border-right-color: transparent;

  &.small {
    width: 12px;
    height: 12px;
  }

  &.info {
    border-color: $tint-color;
    border-right-color: transparent;
  }

  &.warning {
    border-color: $warning-color;
    border-right-color: transparent;
  }

  &.danger {
    border-color: $danger-color;
    border-right-color: transparent;
  }

  &.success {
    border-color: $success-color;
    border-right-color: transparent;
  }
}

@keyframes rotate {
  0%    { transform: rotate(0deg); }
  100%  { transform: rotate(360deg); }
}
